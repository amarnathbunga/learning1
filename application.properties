topologyEntryTime = topology_entry_time
reqTimeStamp = request_timestamp
md5 = uniqueId
#kafka.adInflatedResponded.topic.name = ad_inflated_responded_messages
kafka.adInflated.topic.name = josh_ad_inflated_messages
kafka.adResponse.topic.name = josh_ad_responded_messages
kafka.JoshRequest.topic.name = josh_req_messages
kafka.JoshImp.topic.name = josh_imp_messages
kafka.JoshClk.topic.name = josh_clk_messages
kafka.JoshAttribution.topic.name = oxAttributionsQueue 
kafka.JoshInstall.topic.name = oxPostBackQueue 
kafka.JoshAppEvents.topic.name = oxAppEventPostBackQueue
kafka.JoshVast.topic.name = josh_vast_messages
spark.trigger.interval = 15 seconds
#kafka.adInflatedResponded.maxOffsets = 2
kafka.adInflated.maxOffsets = 100000
kafka.adResponse.maxOffsets = 100000
kafka.joshRequest.maxOffsets = 100000
kafka.joshImp.maxOffsets = 100000
kafka.joshClk.maxOffsets = 50000
kafka.joshAttribution.maxOffsets = 10000
kafka.joshInstall.maxOffsets = 50000
kafka.joshAppEvents.maxOffsets = 5000
kafka.joshVast.maxOffsets = 100000
kafka.group.prefix = kafka_kudu_josh
#spark.adInflatedRespondedCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/adInflatedRespondedCheckpoint
spark.adInflatedCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/adInflatedCheckpoint
spark.adResponseCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/adResponseCheckpoint
spark.joshRequestCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/JoshRequestCheckpoint
spark.joshImpressionCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/joshImpressionCheckpoint
spark.joshClickCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/JoshClickCheckpoint
spark.joshAttributionCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/JoshAttributionCheckpoint
spark.joshInstallCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/JoshInstallCheckpoint
spark.joshAppEventsCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/JoshAppEventsCheckpoint
spark.joshVastCheckPtPath = hdfs://cdhadsnrt/user/dh-ads/josh/JoshVastCheckpoint
spark.badrecordsOrcPath = hdfs://cdhadsnrt/user/dh-ads/ric-kafka-kudu1/kafkaSparkStreamingKudu/badrecordscloudera3twp
spark.monitoring.influxdb.enabled = true
spark.monitoring.influxdb.hosts = ads-compute-n2.internal.ads.dailyhunt.in
# dev influxdb
#spark.monitoring.influxdb.hosts = 192.168.132.120
hdfs.location = hdfs://cdhadsnrt/user/dh-ads/
warehouse.location = hdfs://cdhadsnrt/user/dh-ads/

email.from.ids = eternoreports@verse.in
#email.to.ids = mayank.asthana@dailyhunt.in
#email.to.ids = ekamdeep.kaur@dailyhunt.in
email.to.ids = josh-nrt-monitor@dailyhunt.in

mysql.kudu.mongo.sinker.ops.dh.table = daedalus.kudu_mongo_sinker_hourly_ops
mysql.kudu.mongo.sinker.ops.josh.table = daedalus.josh_kudu_mongo_sinker_hourly_ops
spark.joshcolumns = clientid-client_id,gpscountry-country,gpsstate-state,gpscity-city,user_app_ver-app_ver,user_connection-connection_type,user_os_ver-os_ver,user_languages-user_language,uniqueid-unique_id,cellid-cell_id,adgroupid-ad_group_id,audiencesegments-audience_segments,resolution-device_resolution,hostalias-hostname,locationsource-location_src,partnerid-partner_id,deliveryslab-delivery_slab,userdeliveryslab-user_delivery_slab,nthimpression-nth_impression,utmsource-utm_source,utmmedium-utm_medium,utmcampaign-utm_campaign,installdeliveryslab-install_delivery_slab,installcpi-install_cpi,optimisedby-optimised_on,topcampaignids-top_campaign_ids,topcampaignecpms-top_campaign_ecpms,predictedinstallprobability-predicted_install_probability,campaignprdictedctr-campaign_predicted_ctr,promovdoid-promovdo_id,promotopic-promo_topic,topicid-topic_id,topicname-topic_name,dhtvchannelid-dhtv_channel_id,dhtvtype-dhtv_type,buzzcontentpartner-buzz_content_partner,dhtvsourcekey-dhtv_source_key,dhtvrelevance-dhtv_relevance,dhtvurgency-dhtv_urgency,dhtvpartyleaning-dhtv_party_leaning,pubname-pubname,vdogroupkey-vdogroupkey,articleid-article_id,autoplaypref-autoplaypref,secondbiddercampaign-second_bidder_campaign,secondbidderecpm-second_bidder_ecpm,entityid-entity_id,entitytype-entity_type,entitysubtype-entity_subtype,contentcontext-contentcontext,parentcontentcontext-parentcontentcontext,productids-product_ids,recopolicy-recopolicy,et_year-event_year,et_month-event_month,et_day-event_day,et_hour-event_hour,appid-install_campaign_app_id,app_id-install_campaign_app_id
kudu.filter_partition = 6
kudu.masters = es-estimation-n1.internal.ads.dailyhunt.in:7051,es-estimation-n2.internal.ads.dailyhunt.in:7051,es-estimation-n3.internal.ads.dailyhunt.in:7051
kudu.joshTablename = default.josh_nrt_ads_events_data
mysql.uri = jdbc:mysql://db.internal.ads.dailyhunt.in:38036/daedalus?user=oads_user&password=eterno123
mysql.viewupdatefrequency = 2 minutes
appevents.retention = 20

kafka.bootstrap.servers = kafka-n1.internal.ads.dailyhunt.in:9092,kafka-n2.internal.ads.dailyhunt.in:9092,kafka-n3.internal.ads.dailyhunt.in:9092,kafka-n4.internal.ads.dailyhunt.in:9092,kafka-n5.internal.ads.dailyhunt.in:9092,kafka-n6.internal.ads.dailyhunt.in:9092,kafka-n7.internal.ads.dailyhunt.in:9092,kafka-n8.internal.ads.dailyhunt.in:9092
#kafka.group.prefix = kafka-kudu-sink-josh
#email.from.ids = eternoreports@verse.in
#email.to.ids = ads-data-performance@verse.in

###content interaction events
josh.content.interaction.events.tablename = default.josh_content_interaction_events
#josh.nrt.ads.events.tablename = default.josh_nrt_ads_events_data

content.generic_event.interaction.spark.trigger.interval = 15 seconds
content.generic_event.interaction.topic = josh_generic_event_interactions
content.generic_event.interaction.maxoffsets = 1000000
content.generic_event.interaction.checkpoint.location = hdfs://cdhadsnrt/user/dh-ads/contentInteraction/JoshGenericEventInteractionCheckpoint

content.ad.interaction.spark.trigger.interval = 15 seconds
content.ad.interaction.checkpoint.location = hdfs://cdhadsnrt/user/dh-ads/contentInteraction/JoshAdInteractionCheckpoint
content.nrt.ad.interaction.checkpoint.location = hdfs://cdhadsnrt/user/dh-ads/contentInteraction/JoshNrtAdInteractionCheckpoint
content.ad.interaction.topic = josh_ad_interactions
content.ad.interaction.maxoffsets = 10000
kudu.filter_partition_ad_interaction = 2
kudu.tablename = default.nrt_ads_events_data
adsprofile.weekly.mongo.zones = "card-p0","card-p1","storypage","pgi","vdo-card-p1","masthead","instream-vdo","dhtv-p0","card-pp1"
mongo.masters = mongodb://dhuadmin:dyt%40dmin123@usrmongo-n2.internal.ads.dailyhunt.in:10001,usrmongo-n9.internal.ads.dailyhunt.in:10001
mongo.database = dhads

dh.users.kudu.tablename = default.dh_users_profile
dh.mongo.userscollection = DhUsers

josh.kudu.tablename = default.josh_nrt_ads_events_data
josh.mongo.masters = mongodb://admin:ak47josh@mongo-n2.internal.ads.dailyhunt.in:10001,mongo-n9.internal.ads.dailyhunt.in:10001
josh.mongo.database = joshads
josh.mongo.userscollection = JoshUsers
josh.users.kudu.tablename = default.josh_users_profile

badrecords.kudu_table = default.josh_bad_records
badrecords.enabled_apps = JoshClickKafkaKuduSinker,JoshImpressionKafkaKuduSinker,JoshRequestsKafkaKuduSinker,JoshAdInflatedKafkaKuduSinker,JoshResponseKafkaKuduSinker
badrecords.apps_kafka_cache_enabled = JoshRequestsKafkaKuduSinker-true,JoshClickKafkaKuduSinker-true,JoshImpressionKafkaKuduSinker-true,JoshResponseKafkaKuduSinker-true,JoshAdInflatedKafkaKuduSinker-true
badrecords.apps_spark_batch_evaluation_frequency = JoshRequestsKafkaKuduSinker-1

mysql.kudu.mongo.sinker.ops.dh.table = daedalus.kudu_mongo_sinker_hourly_ops
mysql.kudu.mongo.sinker.ops.josh.table = daedalus.josh_kudu_mongo_sinker_hourly_ops
